{"version":3,"sources":["redux/actionTypes.js","reportWebVitals.js","components/Loading.js","redux/action.js","components/Items.js","components/Item.js","components/Cart.js","Products.js","Product.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["actionType","PRODUCT_START_FETCHING","PRODUCT_FETCHED","PRODUCT_FETCH_ERROR","A_PRODUCT_START_FETCHING","A_PRODUCT_FETCHED","A_PRODUCT_FETCH_ERROR","ADDING_TO_CART","ADDED_TO_CART","ADD_TO_CART_ERROR","CART_UPDATING","CART_UPDATED","CART_UPDATE_ERROR","CHECKOUT_CREATING","CHECKOUT_CREATED","CHECKOUT_CREATE_ERROR","CHECKOUT_FETCHING","CHECKOUT_FETCHED","CHECKOUT_FETCH_ERROR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","client","Client","buildClient","storefrontAccessToken","domain","actionFetchSingleProduct","productId","dispatch","type","product","fetch","data","catch","error","fetched","Items","useDispatch","products","useSelector","state","reducerFetchAllProducts","product_data","product_fetched","console","log","Price","variants","price","className","map","item","image","id","title","images","to","src","alt","Item","useParams","reducerFetchProduct","a_product_data","a_product_fetched","useState","checkoutId","setCheckoutId","useEffect","localStorage","getItem","available","sku","onClick","variantId","quantity","lineItemsToAdd","parseInt","checkout","addLineItems","lineItems","actionAddToCart","Cart","reducerFetchCheckout","checkout_data","undefined","length","variant","altText","description","pid","priceV2","currencyCode","amount","rate","itemId","variableValues","qty","currency","Products","create","setItem","fetchAll","err","Product","App","checkoutdata","reducerCreateCheckout","actionFetchCheckout","window","open","webUrl","exact","path","require","initalStateAllProducts","product_fetching","product_fetch_error","product_dataLength","initalStateProduct","a_product_fetching","a_product_fetch_error","a_product_dataLength","initalStateCheckout","checkout_creating","checkout_created","checkout_error","checkout_id","initalStateAddToCart","adding_to_cart","added_to_cart","add_to_cart_error","cart_items","initalStateUpdateCart","cart_updating","cart_updated","cart_update_error","initalStateFetchCheckout","checkout_fetching","checkout_fetched","checkout_fetch_error","reducer","combineReducers","action","reducerAddToCart","reducerUpdateCart","middleware","applyMiddleware","thunk","createLogger","store","createStore","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e64d7b5.chunk.js","sourcesContent":["export const actionType = {\n\n  PRODUCT_START_FETCHING: 'PRODUCT_START_FETCHING',\n  PRODUCT_FETCHED: 'PRODUCT_FETCHED',\n  PRODUCT_FETCH_ERROR: 'PRODUCT_FETCH_ERROR',\n\n  A_PRODUCT_START_FETCHING: 'A_PRODUCT_START_FETCHING',\n  A_PRODUCT_FETCHED: 'A_PRODUCT_FETCHED',\n  A_PRODUCT_FETCH_ERROR: 'A_PRODUCT_FETCH_ERROR',\n\n  ADDING_TO_CART: \"ADDING_TO_CART\",\n  ADDED_TO_CART: \"ADDED_TO_CART\",\n  ADD_TO_CART_ERROR: \"ADD_TO_CART_ERROR\",\n\n  CART_UPDATING: 'CART_UPDATING',\n  CART_UPDATED: 'CART_UPDATED',\n  CART_UPDATE_ERROR: 'CART_UPDATE_ERROR',\n\n  CHECKOUT_CREATING: 'CHECKOUT_CREATING',\n  CHECKOUT_CREATED: 'CHECKOUT_CREATED',\n  CHECKOUT_CREATE_ERROR: 'CHECKOUT_CREATE_ERROR',\n\n  CHECKOUT_FETCHING: 'CHECKOUT_FETCHING',\n  CHECKOUT_FETCHED: 'CHECKOUT_FETCHED',\n  CHECKOUT_FETCH_ERROR: 'CHECKOUT_FETCH_ERROR',\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default Loading\n","import {actionType} from './actionTypes';\nimport Client from 'shopify-buy';\n\n\n// Initializing a client to return content in the store's primary language\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\n\n/**\n * \n * create checkout & \n * store checkout Id into local storage\n */\nexport const actionCreateCheckout = () => {\n  \n    return function (dispatch) {\n\n      dispatch({type:actionType.CHECKOUT_CREATING})\n\n      // Create an empty checkout\n      client.checkout.create().then((checkout) => {\n          // Do something with the checkout\n          console.log(\"CHECKOUT ACTION:\",checkout.id);\n          dispatch({\n            type: actionType.CHECKOUT_CREATED,\n            checkoutId: checkout.id,\n            data: checkout\n          })\n          \n          /** store checkout into localstorage */\n          if (!localStorage.checkout) {\n            localStorage.setItem(\"checkout\", checkout.id);\n          }\n        })\n        .catch(error => {\n          dispatch({\n            type: actionType.CHECKOUT_CREATE_ERROR,\n            fetched: false,\n            error: error\n          })\n        })\n    }    \n\n}\n\n\n/**\n * \n * @returns FETCH ALL PRODUCTS\n */\nexport const actionFetchAllProduct = () => {\n\n  return function (dispatch) {\n    \n    dispatch({\n      type: actionType.PRODUCT_START_FETCHING\n    })\n\n    //Fetch all products in your shop\n    client.product.fetchAll()\n    .then((products) => {\n      console.log(products);\n      //Do something with the products\n      dispatch({\n        type: actionType.PRODUCT_FETCHED,\n        data: products\n      })\n    })\n    .catch(err => {\n      dispatch({ \n        type: actionType.PRODUCT_FETCH_ERROR,\n        fetched: false,\n        err:err\n      })\n    })\n  }// action fetchAllProducts closed\n\n\n\n}\n\n/**\n * FETCH SINGLE PRODUCT PRODUCT BY ID\n*/\nexport const actionFetchSingleProduct = (productId) => {\n\n  return function (dispatch) {\n\n  dispatch({\n    type: actionType.A_PRODUCT_START_FETCHING\n  })  \n\n  client.product.fetch(productId).then((product) => {\n   // console.log(product);\n    dispatch({\n      type: actionType.A_PRODUCT_FETCHED,\n      data: product,\n    })\n  }).catch((error) => {\n    dispatch({\n      type: actionType.A_PRODUCT_FETCH_ERROR,\n      fetched: false,\n      error: error\n    })\n  })\n  \n\n  }\n  \n  \n\n}\n\n\n/**\n * ADD TO CART [Adding Line Items]\n */\nexport const actionAddToCart = (checkoutId, variantId, quantity) => {\n\n  //const lineItemsToAdd = [{ variantId, quantity: parseInt(quantity, 10)}];\n  const lineItemsToAdd = [\n    {\n      variantId: variantId,\n      quantity: parseInt(quantity, 10),\n      //customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\n    }\n  ];\n\n  return function(dispatch){\n\n    dispatch({type:actionType.ADDING_TO_CART})\n\n    // Add an item to the checkout\n    client.checkout.addLineItems(checkoutId, lineItemsToAdd).then((checkout) => {\n    // Do something with the updated checkout\n      console.log(checkout.lineItems); // Array with one additional line item\n      dispatch({\n        type: actionType.ADDED_TO_CART,\n        data: checkout.lineItems\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: actionType.ADD_TO_CART_ERROR,\n        fetched: false,\n        error: error,\n      })\n    })\n  }\n\n}\n\n/**\n * \n * UPDATE CART\n */\nexport const actionUpdateCart = (checkoutId, pid, quantity) => {\n\n  const lineItemsToUpdate = [\n    {\n      id: pid, \n      quantity: parseInt(quantity, 10),\n    }\n  ];\n\n  console.log(\"line item to update\",lineItemsToUpdate);\n  console.log(\"checkoutid action\", checkoutId)\n\n  return function(dispatch){\n\n    dispatch({type: actionType.CART_UPDATING})\n\n    // Update the line item on the checkout (change the quantity or variant)\n      client.checkout.updateLineItems(checkoutId, lineItemsToUpdate).then((checkout) => {\n        // Do something with the updated checkout\n        console.log(checkout.lineItems); // Quantity of line item \n        dispatch({\n          type: actionType.CART_UPDATED,\n          data: checkout.lineItems,\n        })\n      }).catch((error) => {\n        dispatch({\n          type: actionType.CART_UPDATE_ERROR,\n          error: error\n        })\n      })\n\n  }\n\n}\n\n\n\n/**\n * FETCH CHECKOUT\n */\nexport const actionFetchCheckout = (checkoutId) => {\n\n  return function(dispatch){\n    dispatch({\n      type: actionType.CHECKOUT_FETCHING\n    })\n\n    client.checkout.fetch(checkoutId).then((checkout) => {\n      \n      console.log(checkout);\n      dispatch({\n        type: actionType.CHECKOUT_FETCHED,\n        data: checkout,\n      })\n\n    })\n    .catch(error => {\n      dispatch({\n        type: actionType.CHECKOUT_FETCH_ERROR,\n        error: error,\n      })\n    })\n  }\n}","import Loading from './Loading';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {actionFetchSingleProduct} from '../redux/action';\nimport {Link} from 'react-router-dom';\n\n\nfunction Items() {\n\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.reducerFetchAllProducts.product_data);\n  const product_fetched = useSelector(state => state.reducerFetchAllProducts.product_fetched)\n\n  console.log(\"productts \",products);\n  \n  const Image = (image) => (<div>\n        <img className=\"w-full\" src={image[0].src} alt=\"product item\" />\n      </div>);\n\n  const Price = (variants) => ( <div>{variants[0].price}</div> );\n\n  const itemDetails = (id) => {\n    dispatch(actionFetchSingleProduct(id));    \n  }\n\n  // const LoadVariants = (data) => {\n  //   return data.map(item => {\n  //     const {available, sku, title, price } = item;\n  //     return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n  //       <p>{title}</p>\n  //       <p> Price: {price}</p>\n  //       <p> SKU: {sku}</p>\n  //     </div>\n  //   })\n  // }\n\n  if(!product_fetched) return <Loading />\n  return (\n    <div className=\"grid lg:grid-cols-3 xl:grid-cols-4 md:m-0 m-2\">\n      {\n        products.map((item)=>{\n          const {id, title, images, variants} = item;\n          return  <Link to={`/item/${id}`}>\n              <div className=\"w-full p-3 md:m-2 cursor-pointer\">\n                <div>{Image(images)}</div>\n                <div className=\"font-light mt-2\">\n                  <h3>{title}</h3>\n                  <div>{Price(variants)}</div>\n                </div>\n              </div>\n          </Link>\n        })\n      }\n    </div>\n  )\n}\n\nexport default Items","import {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Loading from './Loading';\nimport {actionAddToCart, actionFetchSingleProduct} from '../redux/action';\nimport {useParams, Link} from 'react-router-dom';\n\n\n\nfunction Item() {\n\n  const {id} = useParams();\n\n  const dispatch = useDispatch();\n\n  const product = useSelector(state => state.reducerFetchProduct.a_product_data);\n  const product_fetched = useSelector(state => state.reducerFetchProduct.a_product_fetched);\n\n  const [checkoutId, setCheckoutId] = useState('');\n  useEffect(()=>{\n    setCheckoutId(localStorage.getItem(\"checkout\"))\n  },[])\n\n  //const checkoutId = useSelector(state => state.reducerCreateCheckout.checkout_id);\n\n  useEffect(()=>{\n      dispatch(actionFetchSingleProduct(id));\n  },[dispatch, id])\n\n\n  \n\n  const LoadImage = (image) => {\n    return image.map((item)=> {\n      return <div>\n        <img className=\"w-full p-2\" src={item.src} alt=\"product item\" />\n        </div>\n    })\n  }\n\n  console.log(product);\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex flex-col p-2 bg-gray-100 m-1\">\n        <div>{title}</div>\n        <div> Price: {price}</div>\n        <div> SKU: {sku}</div>\n      </div>\n    })\n  }\n\n  if(!product_fetched) return <Loading />\n  return (\n    <div className=\"max-w-screen-xl\">\n\n      <div className=\"p-2 m-2 w-20 cursor-pointer\">\n        <div><Link to=\"/\">Close</Link> </div>\n      </div>\n\n    {\n      product &&\n      <div className=\"grid md:grid-cols-12 gap-2 py-4 my-2\">\n        <div className=\"col-span-8\">\n          <div className=\"grid md:grid-cols-2 grid-flow-row gap-2\">\n            {LoadImage(product.images)}\n          </div>\n        </div>\n        \n        <div className=\"col-span-4\">\n            <h1 className=\"text-2xl my-2\">{product.title}</h1>\n            <div>\n              {LoadVariants(product.variants)}\n            </div>\n            <div>\n              <div \n                onClick={() => dispatch(actionAddToCart(checkoutId, product.variants[0].id, 1))}\n                className=\"cursor-pointer p-2 m-2\" >\n                Add to Cart\n              </div>\n            </div>\n        </div>\n      </div>\n    }\n    </div>\n  )\n}\n\nexport default Item;","import Loading from './Loading';\nimport {useSelector} from 'react-redux';\n\n\n\nfunction Cart() {\n\nconst checkout = useSelector(state => state.reducerFetchCheckout.checkout_data);\n\nconsole.log(\"CART\",checkout);\nconsole.log(\"cart items\", checkout.lineItems);\n\n    checkout.lineItems === undefined \n    && checkout.length === 0 \n    && <Loading />\n    return (\n      checkout.lineItems !== undefined && checkout.lineItems.map(item => {\n        const {variant:{image:{src, altText},title:description, id:pid, priceV2:{currencyCode, amount},price:rate}} = item;\n        const {id:itemId, title, quantity,variableValues:{id:checkoutId}} = item;\n\n        return <cartItems\n          image={src}\n          alt={altText}\n          checkoutId={checkoutId} \n          itemId={itemId} \n          title={title}\n          description={description} \n          qty={quantity}\n          pid={pid}\n          currency={currencyCode}\n          rate={rate} \n          amount={amount}\n        />\n\n      })\n    )\n}\n\nexport default Cart","import {useEffect, useState} from 'react';\nimport Items from './components/Items';\nimport Item from './components/Item';\nimport Cart from './components/Cart';\nimport {actionFetchAllProduct} from './redux/action';\nimport {useDispatch} from 'react-redux';\nimport {actionCreateCheckout} from './redux/action';\n\nfunction Products() {\n\n  const dispatch = useDispatch();\n\n\n  useEffect(()=>{\n    dispatch(actionCreateCheckout());\n    dispatch(actionFetchAllProduct());\n  },[dispatch])\n\n  return (\n    <div>\n      <Items />\n    </div>\n  )\n}\n\nexport default Products","import Item from './components/Item';\n\n\nfunction Product() {\n  return (\n    <div>\n      <Item />\n    </div>\n  )\n}\n\nexport default Product\n","import {useEffect, useState} from 'react';\nimport {BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport Products from './Products';\nimport Product from './Product';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {actionFetchCheckout} from './redux/action';\nimport Cart from './components/Cart';\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const [checkoutId, setCheckoutId] = useState('');\n\n  console.log(checkoutId);\n\n  useEffect(()=>{\n      setCheckoutId(localStorage.getItem(\"checkout\"))\n  },[])\n\n  //const checkoutId = useSelector( state => state.reducerCreateCheckout.checkout_id );\n  const checkoutdata = useSelector(state => state.reducerCreateCheckout.data);\n\n  useEffect(()=>{\n    checkoutId && dispatch(actionFetchCheckout(checkoutId));\n  },[dispatch, checkoutId])\n\n  return (\n    <div>\n      <Cart />\n      <BrowserRouter>\n      Shopify shop \n      <div>\n        <Link to=\"/\">Products List</Link>\n      </div>\n      <div>\n      <div>\n          <div \n            className=\"cursor-pointer py-2 px-4 my-5 border-gray-500\"\n            onClick={() => window.open(checkoutdata.webUrl, '_blank')} >\n              Checkout\n          </div>\n        </div>\n      </div>\n\n        <Switch>\n          <Route exact path=\"/\" >\n          <Products />\n          </Route>\n          <Route path=\"/item/:id\" >\n            <Product />\n          </Route>\n\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","const {actionType} = require('./actionTypes');\n\n\n/**\n * FETCH ALL PRODUCTS\n */\nconst initalStateAllProducts = {\n  product_fetching: false,\n  product_fetched: false,\n  product_fetch_error: '',\n  product_data: [],\n  product_dataLength: 0,\n}\n\nexport const reducerFetchAllProducts = (state = initalStateAllProducts, action) => {\n\n  //console.log(\"REDUCER???\",action.type);\n\n  switch (action.type) {\n    \n    case actionType.PRODUCT_START_FETCHING:\n      return {\n        product_fetching: true,\n        product_data: []\n      }\n    case actionType.PRODUCT_FETCHED:\n      return {\n        product_data: action.data,\n        product_fetched: true,\n      }\n    case actionType.PRODUCT_FETCH_ERROR:\n      return {\n        product_fetched: false,\n        product_fetching: false,\n        product_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n\n}\n\n\n/** \n * FETCH SINGLE PRODUCT BY ID\n */\nconst initalStateProduct = {\n  a_product_fetching: false,\n  a_product_fetched: false,\n  a_product_fetch_error: '',\n  a_product_data: [],\n  a_product_dataLength: 0,\n}\n\nexport const reducerFetchProduct = (state = initalStateProduct, action) => {\n\n  switch (action.type) {\n    \n    case actionType.A_PRODUCT_START_FETCHING:\n      return {\n        a_product_fetching: true,\n        a_product_data: []\n      }\n    case actionType.A_PRODUCT_FETCHED:\n      return {\n        a_product_data: action.data,\n        a_product_fetched: true,\n      }\n    case actionType.A_PRODUCT_FETCH_ERROR:\n      return {\n        a_product_fetched: false,\n        a_product_fetching: false,\n        a_product_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}\n\n\n/** \n * CREATE CHECKOUT ID\n*/\nconst initalStateCheckout = {\n  checkout_creating: false,\n  checkout_created: false,\n  checkout_error: '',\n  checkout_id: '',\n  data: '',\n}\n\nexport const reducerCreateCheckout = (state = initalStateCheckout, action) => {\n\n  switch (action.type) {\n    \n    case actionType.CHECKOUT_CREATING:\n      return {\n        checkout_fetching: true,\n        checkout_id: ''\n      }\n    case actionType.CHECKOUT_CREATED:\n      return {\n        checkout_id: action.checkoutId,\n        data: action.data,\n        checkout_created: true,\n      }\n    case actionType.CHECKOUT_CREATE_ERROR:\n      return {\n        checkout_created: false,\n        checkout_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}\n\n\n\n/** \n * ADD TO CART [Adding Line Items]\n */\n const initalStateAddToCart = {\n  adding_to_cart: false,\n  added_to_cart: false,\n  add_to_cart_error: '',\n  cart_items: [],\n}\n\nexport const reducerAddToCart = (state = initalStateAddToCart, action) => {\n\n  switch (action.type) {\n    \n    case actionType.ADDING_TO_CART:\n      return {\n        adding_to_cart: true,\n        cart_items: []\n      }\n    case actionType.ADDED_TO_CART:\n      return {\n        cart_items: action.data,\n        added_to_cart: true,\n      }\n    case actionType.ADD_TO_CART_ERROR:\n      return {\n        added_to_cart: false,\n        add_to_cart_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}\n\n\n\n/** \n * ADD TO CART [Adding Line Items]\n */\nconst initalStateUpdateCart = {\n  cart_updating: false,\n  cart_updated: false,\n  cart_update_error: '',\n  cart_items: [],\n}\n\nexport const reducerUpdateCart = (state = initalStateUpdateCart, action) => {\n\n  switch (action.type) {\n    \n    case actionType.CART_UPDATING:\n      return {\n        cart_updating: true,\n        cart_items: []\n      }\n    case actionType.CART_UPDATED:\n      return {\n        cart_items: action.data,\n        cart_updated: true,\n      }\n    case actionType.CART_UPDATE_ERROR:\n      return {\n        cart_updated: false,\n        cart_update_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n\n}\n\n\n\n\n\n/** \n * FETCH CHECKOUT\n */\n const initalStateFetchCheckout = {\n  checkout_fetching: false,\n  checkout_fetched: false,\n  checkout_fetch_error: '',\n  checkout_data: '',\n}\n\nexport const reducerFetchCheckout = (state = initalStateFetchCheckout, action) => {\n\n  switch (action.type) {\n    \n    case actionType.CHECKOUT_FETCHING:\n      return {\n        checkout_fetching: true,\n        checkout_data: []\n      }\n    case actionType.CHECKOUT_FETCHED:\n      return {\n        checkout_data: action.data,\n        checkout_fetched: true,\n      }\n    case actionType.CHECKOUT_FETCH_ERROR:\n      return {\n        checkout_fetched: false,\n        checkout_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n\n  reducerFetchAllProducts,\n  reducerFetchProduct,\n  reducerCreateCheckout,\n  reducerAddToCart,\n  reducerFetchCheckout,\n  reducerUpdateCart,\n  \n  \n} from './reducer';\n\nconst reducer = combineReducers({\n\n    reducerFetchAllProducts,\n    reducerFetchProduct,\n    reducerCreateCheckout,\n    reducerAddToCart,\n    reducerFetchCheckout,\n    reducerUpdateCart,\n    \n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);","import React from 'react';\nimport ReactDom from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\n\n\nReactDom.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  </React.StrictMode>\n, document.getElementById(\"root\"));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/** \n * StrictMode is a tool for highlighting potential problems in an application. Like Fragment, StrictMode does not render any visible UI. It activates additional checks and warnings for its descendants.\n\nNote:\n\nStrict mode checks are run in development mode only; they do not impact the production build.\n\n*/"],"sourceRoot":""}