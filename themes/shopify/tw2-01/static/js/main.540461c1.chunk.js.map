{"version":3,"sources":["components/Items.js","components/Item.js","Products.js","App.js","index.js"],"names":["Items","productState","setProductId","map","item","data","image","id","title","descriptionHtml","images","variants","onClick","className","src","alt","available","sku","price","Item","productId","useEffect","Client","buildClient","domain","storefrontAccessToken","product","fetch","then","console","log","Products","useState","setProductState","client","fetchAll","products","collection","fetchAllWithProducts","collections","length","App","ReactDom","render","document","getElementById"],"mappings":"sNA0CeA,MAxCf,YAA8C,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAoB5B,OACE,8BAEID,EAAaE,KAAI,SAACC,GAChB,IAhBcC,EANHC,EAsBJC,EAA+CH,EAA/CG,GAAGC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,gBAAiBC,EAAoBN,EAApBM,OAAQC,EAAYP,EAAZO,SAC1C,OAAO,sBACPC,QAAS,kBAAMV,EAAaK,IAC5BM,UAAU,iCAFH,UAGL,6BAAKL,IACL,8BAAMC,IACN,+BA5BSH,EA4BOI,EA3BjBJ,EAAMH,KAAI,SAACC,GAChB,OAAO,8BAAK,qBAAKS,UAAU,WAAWC,IAAKV,EAAKU,IAAKC,IAAI,yBA2BnD,+BAvBYV,EAuBOM,EAtBpBN,EAAKF,KAAI,SAAAC,GACd,IAAOY,EAAiCZ,EAAjCY,UAAWC,EAAsBb,EAAtBa,IAAKT,EAAiBJ,EAAjBI,MAAOU,EAAUd,EAAVc,MAC9B,OAAOF,GAAa,sBAAKH,UAAU,2BAAf,UAClB,4BAAIL,IACJ,yCAAYU,KACZ,uCAAUD,uBCmBHE,MA/Bf,YAA4B,IAAbC,EAAY,EAAZA,UAuBb,OAnBAC,qBAAU,WAEOC,IAAOC,YAAY,CAChCC,OAAQ,2BACRC,sBAAuB,qCAKlBC,QAAQC,MAAMP,GAAWQ,MAAK,SAACF,GAEpCG,QAAQC,IAAI,iBAAiBJ,QAI/B,CAACN,IAKD,gDC6BWW,MAnDf,WAEE,MAAwCC,mBAAS,IAAjD,mBAAO/B,EAAP,KAAqBgC,EAArB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOZ,EAAP,KAAkBlB,EAAlB,KA6BA,OA3BAmB,qBAAU,WAER,IAAMa,EAASZ,IAAOC,YAAY,CAChCC,OAAQ,2BACRC,sBAAuB,qCAIzBS,EAAOR,QAAQS,WAAWP,MAAK,SAACQ,GAE9BP,QAAQC,IAAIM,GACZH,EAAgBG,MAIhBF,EAAOG,WAAWC,uBAAuBV,MAAK,SAACW,GAE7CV,QAAQC,IAAIS,GACZV,QAAQC,IAAIS,EAAY,GAAGH,eAE/B,IAGFP,QAAQC,IAAI,gBAAiB7B,GAK7B,mCAEI,sBAAKY,UAAU,2CAAf,UACE,oBAAIA,UAAU,UAAd,qBAEEZ,EAAauC,OAAS,GACtB,cAAC,EAAD,CAAOvC,aAAcA,EAAcC,aAAcA,IAGjDkB,GACA,cAAC,EAAD,CAAMA,UAAWA,U,cC9BZqB,MAdf,WAEE,OACE,+CAEE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,YCNVC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.540461c1.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Items({productState, setProductId}) {\n\n  const LoadImage = (image) => {\n    return image.map((item)=>{\n      return <div><img className=\"w-48 p-1\" src={item.src} alt=\"product item\" /></div>\n    })\n  }\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n        <p>{title}</p>\n        <p> Price: {price}</p>\n        <p> SKU: {sku}</p>\n      </div>\n    })\n  }\n\n\n  return (\n    <div>\n      {\n        productState.map((item)=>{\n          const {id,title, descriptionHtml, images, variants} = item;\n          return <div \n          onClick={() => setProductId(id)}\n          className=\"border border-gray-300 p-3 m-3\">\n            <h3>{title}</h3>\n            <div>{descriptionHtml}</div>\n            <div>{LoadImage(images)}</div>\n            <div>{LoadVariants(variants)}</div>\n          </div>\n        })\n      }\n      \n    </div>\n  )\n}\n\nexport default Items\n","import {useEffect, useState} from 'react';\nimport Client from 'shopify-buy';\n\n\nfunction Item({productId}) {\n\n  \n\n  useEffect(()=>{\n    // Initializing a client to return content in the store's primary language\n    const client = Client.buildClient({\n      domain: 'yw-t-shirt.myshopify.com',\n      storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0'\n    });\n\n    // Fetch a single product by ID\n    //const productId = 'Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzc4NTc5ODkzODQ=';\n    client.product.fetch(productId).then((product) => {\n      // Do something with the product\n      console.log(\"SINGLE PRODUCT\",product);\n    });\n\n    \n  },[productId])\n\n\n\n  return (\n    <div>\n      PRODUCT ITEM\n      \n    </div>\n  )\n}\n\nexport default Item;","import {useState, useEffect} from 'react';\nimport Client from 'shopify-buy';\nimport Items from './components/Items';\nimport Item from './components/Item';\nimport {Route} from 'react-router-dom';\n\nfunction Products() {\n\n  const [productState, setProductState] = useState([]);\n  const [productId, setProductId] = useState('');\n\n  useEffect(()=>{\n    // Initializing a client to return content in the store's primary language\n    const client = Client.buildClient({\n      domain: 'yw-t-shirt.myshopify.com',\n      storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0'\n    });\n\n    // Fetch all products in your shop\n    client.product.fetchAll().then((products) => {\n      // Do something with the products\n      console.log(products);\n      setProductState(products);\n    });\n\n    // Fetch all collections, including their products\n      client.collection.fetchAllWithProducts().then((collections) => {\n        // Do something with the collections\n        console.log(collections);\n        console.log(collections[0].products);\n      });\n  },[])\n\n\n  console.log(\"Product State\", productState);\n\n\n\n  return (\n  <>\n    \n      <div className=\"w-full md:max-w-screen-xl m-auto text-sm\">\n        <h1 className=\"text-lg\">Proucts</h1>\n        {\n          productState.length > 0 && \n          <Items productState={productState} setProductId={setProductId} />\n        }\n        {\n          productId && \n          <Item productId={productId} />\n        }\n      </div>\n    \n  </>  \n  )\n}\n\nexport default Products","import Products from \"./Products\";\nimport {BrowserRouter, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      shopify shop\n      <BrowserRouter>\n        <Switch>\n          <Products />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\nReactDom.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}