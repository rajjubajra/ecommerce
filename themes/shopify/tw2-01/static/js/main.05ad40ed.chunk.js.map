{"version":3,"sources":["context/shopContext.js","components/Loading.js","components/Items.js","components/Item.js","Products.js","App.js","index.js"],"names":["ShopContext","React","createContext","client","Client","buildClient","storefrontAccessToken","domain","ShopProvider","state","products","product","checkout","isCartOpen","createCheckout","a","create","localStorage","setItem","id","setState","fetchCheckout","checkoutId","fetch","then","catch","err","console","log","addItemToCheckout","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","openCart","fetchAllProducts","fetchAll","fetchProductWithId","JSON","stringify","closeCart","this","Provider","value","props","children","Component","Consumer","Loading","Items","setProductId","useContext","useEffect","map","item","data","image","title","descriptionHtml","images","variants","onClick","className","src","alt","available","sku","price","Item","productId","useState","setProduct","Products","App","ReactDom","render","document","getElementById"],"mappings":"4SAGMA,EAAcC,IAAMC,gBAEpBC,EAASC,IAAOC,YAAY,CAChCC,sBAAuB,mCACvBC,OAAQ,6BAGJC,E,4MACJC,MAAQ,CACNC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,YAAY,G,EAiBdC,e,sBAAiB,4BAAAC,EAAA,sEACQZ,EAAOS,SAASI,SADxB,cACTJ,EADS,OAEfK,aAAaC,QAAQ,WAAYN,EAASO,IAF3B,SAGT,EAAKC,SAAS,CAAER,SAAUA,IAHjB,2C,EAMjBS,c,uCAAgB,WAAOC,GAAP,SAAAP,EAAA,sDACdZ,EAAOS,SACJW,MAAMD,GACNE,MAAK,SAACZ,GACL,EAAKQ,SAAS,CAAER,SAAUA,OAE3Ba,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MANhB,2C,wDAShBG,kB,uCAAoB,WAAOC,EAAWC,GAAlB,iBAAAhB,EAAA,6DACZiB,EAAiB,CACrB,CACEF,YACAC,SAAUE,SAASF,EAAU,MAJf,SAOK5B,EAAOS,SAASsB,aACrC,EAAKzB,MAAMG,SAASO,GACpBa,GATgB,OAOZpB,EAPY,OAWlB,EAAKQ,SAAS,CAAER,SAAUA,IAC1Be,QAAQC,IAAIhB,GAEZ,EAAKuB,WAda,2C,0DAiBpBC,iB,sBAAmB,4BAAArB,EAAA,sEACMZ,EAAOQ,QAAQ0B,WADrB,OACX3B,EADW,OAEjB,EAAKU,SAAS,CAAEV,SAAUA,IAFT,2C,EAKnB4B,mB,uCAAqB,WAAOnB,GAAP,eAAAJ,EAAA,sEACGZ,EAAOQ,QAAQY,MAAMJ,GADxB,cACbR,EADa,OAEnB,EAAKS,SAAS,CAAET,QAASA,IACzBgB,QAAQC,IAAIW,KAAKC,UAAU7B,IAHR,kBAKZA,GALY,2C,wDAQrB8B,UAAY,WACV,EAAKrB,SAAS,CAAEP,YAAY,K,EAE9BsB,SAAW,WACT,EAAKf,SAAS,CAAEP,YAAY,K,uDA/D9B,WAIMI,aAAaL,SACf8B,KAAKrB,cAAcJ,aAAaL,UAEhC8B,KAAK5B,mB,oBA2DT,WACE,OACE,cAACd,EAAY2C,SAAb,CACEC,MAAK,2BACAF,KAAKjC,OADL,IAEH2B,iBAAkBM,KAAKN,iBACvBE,mBAAoBI,KAAKJ,mBACzBG,UAAWC,KAAKD,UAChBN,SAAUO,KAAKP,SACfN,kBAAmBa,KAAKb,oBAP5B,SAUGa,KAAKG,MAAMC,e,GAtFOC,aAgGZvC,GAJMR,EAAYgD,SAIlBxC,GChGAyC,MARf,WACE,OACE,8CCqDWC,MApDf,YAAgC,IAAhBC,EAAe,EAAfA,aAEd,EAAqCC,qBAAWpD,GAAzCoC,EAAP,EAAOA,iBAAkB1B,EAAzB,EAAyBA,SA6BzB,OA1BA2C,qBAAU,WAEN,OADAjB,IACO,eAGT,CAACA,IAqBC1B,EAEF,8BAEIA,EAAS4C,KAAI,SAACC,GACZ,IAhBcC,EANHC,EAsBJtC,EAA+CoC,EAA/CpC,GAAGuC,EAA4CH,EAA5CG,MAAOC,EAAqCJ,EAArCI,gBAAiBC,EAAoBL,EAApBK,OAAQC,EAAYN,EAAZM,SAC1C,OAAO,sBACPC,QAAS,kBAAMX,EAAahC,IAC5B4C,UAAU,iCAFH,UAGL,6BAAKL,IACL,8BAAMC,IACN,+BA5BSF,EA4BOG,EA3BjBH,EAAMH,KAAI,SAACC,GAChB,OAAO,8BAAK,qBAAKQ,UAAU,WAAWC,IAAKT,EAAKS,IAAKC,IAAI,yBA2BnD,+BAvBYT,EAuBOK,EAtBpBL,EAAKF,KAAI,SAAAC,GACd,IAAOW,EAAiCX,EAAjCW,UAAWC,EAAsBZ,EAAtBY,IAAKT,EAAiBH,EAAjBG,MAAOU,EAAUb,EAAVa,MAC9B,OAAOF,GAAa,sBAAKH,UAAU,2BAAf,UAClB,4BAAIL,IACJ,yCAAYU,KACZ,uCAAUD,sBAKK,cAAC,EAAD,KCkCRE,MAlEf,YAA0C,IAUlBb,EANHC,EAJNa,EAA0B,EAA1BA,UAAWnB,EAAe,EAAfA,aAExB,EAA8BoB,mBAAS,IAAvC,mBAAO5D,EAAP,KAAgB6D,EAAhB,KAyCA,OApBAnB,qBAAU,WAEOjD,IAAOC,YAAY,CAChCE,OAAQ,2BACRD,sBAAuB,qCAKlBK,QAAQY,MAAM+C,GAAW9C,MAAK,SAACb,GAEpCgB,QAAQC,IAAI,iBAAiBjB,GAC7B6D,EAAW7D,QAIb,CAAC2D,IAKD,qBAAKP,UAAU,mCAAf,SAGEpD,GACA,qCACA,qBAAKmD,QAAS,kBAAIX,EAAa,KAA/B,mBAEA,6BAAKxC,EAAQ+C,QACb,+BAhDeD,EAiDF9C,EAAQiD,OAhDhBH,EAAMH,KAAI,SAACC,GAChB,OAAO,8BAAK,qBAAKQ,UAAU,WAAWC,IAAKT,EAAKS,IAAKC,IAAI,yBAiDzD,+BA7CkBT,EA8CF7C,EAAQkD,SA7CnBL,EAAKF,KAAI,SAAAC,GACd,IAAOW,EAAiCX,EAAjCW,UAAWC,EAAsBZ,EAAtBY,IAAKT,EAAiBH,EAAjBG,MAAOU,EAAUb,EAAVa,MAC9B,OAAOF,GAAa,sBAAKH,UAAU,2BAAf,UAClB,4BAAIL,IACJ,yCAAYU,KACZ,uCAAUD,cA0CZ,oDCzCSM,MAhBf,WAEE,MAAkCF,mBAAS,IAA3C,mBAAOD,EAAP,KAAkBnB,EAAlB,KAIA,OAFAxB,QAAQC,IAAI0C,GAGV,8BACA,eAAC,EAAD,WACE,cAAC,EAAD,CAAOnB,aAAcA,IACrB,cAAC,EAAD,CAAMmB,UAAWA,UCIRI,MAdf,WAEE,OACE,+CAEE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,YCNVC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.05ad40ed.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\nclass ShopProvider extends Component {\n  state = {\n    products: [],\n    product: {},\n    checkout: {},\n    isCartOpen: false,\n  };\n\n  componentDidMount() {\n    // this.createCheckout();\n\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    }\n    //if there is no checkout_id in localStorage then we will create a new checkout\n\n    //else fetch the checkout from shopify\n  }\n\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"checkout\", checkout.id);\n    await this.setState({ checkout: checkout });\n  };\n\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  addItemToCheckout = async (variantId, quantity) => {\n    const lineItemsToAdd = [\n      {\n        variantId,\n        quantity: parseInt(quantity, 10),\n      },\n    ];\n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n    this.setState({ checkout: checkout });\n    console.log(checkout);\n\n    this.openCart();\n  };\n\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  fetchProductWithId = async (id) => {\n    const product = await client.product.fetch(id);\n    this.setState({ product: product });\n    console.log(JSON.stringify(product));\n\n    return product;\n  };\n\n  closeCart = () => {\n    this.setState({ isCartOpen: false });\n  };\n  openCart = () => {\n    this.setState({ isCartOpen: true });\n  };\n\n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithId: this.fetchProductWithId,\n          closeCart: this.closeCart,\n          openCart: this.openCart,\n          addItemToCheckout: this.addItemToCheckout,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default Loading\n","import {useContext, useEffect} from 'react'\nimport {ShopContext} from '../context/shopContext';\nimport Loading from './Loading';\n\n\nfunction Items({setProductId}) {\n\n  const {fetchAllProducts, products} = useContext(ShopContext)\n\n\n  useEffect(()=>{\n      fetchAllProducts();\n      return () => {\n        //clean up\n      };\n  },[fetchAllProducts])\n\n\n\n  const LoadImage = (image) => {\n    return image.map((item)=>{\n      return <div><img className=\"w-48 p-1\" src={item.src} alt=\"product item\" /></div>\n    })\n  }\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n        <p>{title}</p>\n        <p> Price: {price}</p>\n        <p> SKU: {sku}</p>\n      </div>\n    })\n  }\n\n  if(!products) return <Loading />\n  return (\n    <div>\n      {\n        products.map((item)=>{\n          const {id,title, descriptionHtml, images, variants} = item;\n          return <div \n          onClick={() => setProductId(id)}\n          className=\"border border-gray-300 p-3 m-3\">\n            <h3>{title}</h3>\n            <div>{descriptionHtml}</div>\n            <div>{LoadImage(images)}</div>\n            <div>{LoadVariants(variants)}</div>\n          </div>\n        })\n      }\n      \n    </div>\n  )\n}\n\nexport default Items\n","import {useEffect, useState} from 'react';\nimport Client from 'shopify-buy';\n\n\nfunction Item({productId, setProductId}) {\n\n  const [product, setProduct] = useState('');\n\n  const LoadImage = (image) => {\n    return image.map((item)=>{\n      return <div><img className=\"w-48 p-1\" src={item.src} alt=\"product item\" /></div>\n    })\n  }\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n        <p>{title}</p>\n        <p> Price: {price}</p>\n        <p> SKU: {sku}</p>\n      </div>\n    })\n  }\n\n  \n\n  useEffect(()=>{\n    // Initializing a client to return content in the store's primary language\n    const client = Client.buildClient({\n      domain: 'yw-t-shirt.myshopify.com',\n      storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0'\n    });\n\n    // Fetch a single product by ID\n    //const productId = 'Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzc4NTc5ODkzODQ=';\n    client.product.fetch(productId).then((product) => {\n      // Do something with the product\n      console.log(\"SINGLE PRODUCT\",product);\n      setProduct(product);\n    });\n\n    \n  },[productId])\n\n\n\n  return (\n    <div className=\"w-1/2 m-auto flex justify-center\">\n\n    {\n      product &&\n      <>\n      <div onClick={()=>setProductId('')}>Close</div>\n\n      <h1>{product.title}</h1>\n      <div>\n        {LoadImage(product.images)}\n      </div>\n      <div>\n        {LoadVariants(product.variants)}\n      </div>\n      <div>Add to Cart</div>\n      </>\n    }\n      \n    </div>\n  )\n}\n\nexport default Item;","import {useState} from 'react';\nimport ShopProvider from './context/shopContext';\nimport Items from './components/Items';\nimport Item from './components/Item';\n\nfunction Products() {\n\n  const [productId, setProductId] = useState('');\n\n  console.log(productId);\n\n  return (\n    <div>\n    <ShopProvider>\n      <Items setProductId={setProductId} />\n      <Item productId={productId} />\n    </ShopProvider>  \n    </div>\n  )\n}\n\nexport default Products\n","import {BrowserRouter, Switch } from 'react-router-dom';\nimport Products from './Products';\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      shopify shop\n      <BrowserRouter>\n        <Switch>\n          <Products />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\nReactDom.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}