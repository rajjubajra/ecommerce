{"version":3,"sources":["redux/actionTypes.js","reportWebVitals.js","components/Loading.js","redux/action.js","components/Items.js","components/Item.js","context/shopContext.js","Products.js","Product.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["actionType","PRODUCT_START_FETCHING","PRODUCT_FETCHED","PRODUCT_FETCH_ERROR","A_PRODUCT_START_FETCHING","A_PRODUCT_FETCHED","A_PRODUCT_FETCH_ERROR","ADDING_TO_CART","ADDED_TO_CART","ADD_TO_CART_ERROR","CHECKOUT_CREATING","CHECKOUT_CREATED","CHECKOUT_CREATE_ERROR","CHECKOUT_FETCHING","CHECKOUT_FETCHED","CHECKOUT_FETCH_ERROR","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","client","Client","buildClient","storefrontAccessToken","domain","actionFetchSingleProduct","productId","dispatch","type","product","fetch","data","catch","error","fetched","Items","useDispatch","products","useSelector","state","reducerFetchAllProducts","product_data","product_fetched","console","log","Price","variants","price","className","map","item","image","id","title","images","to","src","alt","Item","useParams","reducerFetchProduct","a_product_data","a_product_fetched","checkoutId","reducerCreateCheckout","checkout_id","useEffect","available","sku","onClick","variantId","qty","lineItemsToAdd","quantity","customAttributes","key","value","checkout","addLineItems","lineItems","actionAddToCart","ShopContext","React","createContext","Component","Consumer","Products","create","localStorage","setItem","fetchAll","err","Product","App","chekcoutId","exact","path","require","initalStateAllProducts","product_fetching","product_fetch_error","product_dataLength","initalStateProduct","a_product_fetching","a_product_fetch_error","a_product_dataLength","initalStateCheckout","checkout_creating","checkout_created","checkout_error","initalStateAddToCart","adding_to_cart","added_to_cart","add_to_cart_error","cart_items","initalStateFetchCheckout","checkout_fetching","checkout_fetched","checkout_fetch_error","checkout_data","reducer","combineReducers","action","reducerAddToCart","reducerFetchCheckout","middleware","applyMiddleware","thunk","createLogger","store","createStore","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fbff3d5.chunk.js","sourcesContent":["export const actionType = {\n\n  PRODUCT_START_FETCHING: 'PRODUCT_START_FETCHING',\n  PRODUCT_FETCHED: 'PRODUCT_FETCHED',\n  PRODUCT_FETCH_ERROR: 'PRODUCT_FETCH_ERROR',\n\n  A_PRODUCT_START_FETCHING: 'A_PRODUCT_START_FETCHING',\n  A_PRODUCT_FETCHED: 'A_PRODUCT_FETCHED',\n  A_PRODUCT_FETCH_ERROR: 'A_PRODUCT_FETCH_ERROR',\n\n  ADDING_TO_CART: \"ADDING_TO_CART\",\n  ADDED_TO_CART: \"ADDED_TO_CART\",\n  ADD_TO_CART_ERROR: \"ADD_TO_CART_ERROR\",\n\n  CHECKOUT_CREATING: 'CHECKOUT_CREATING',\n  CHECKOUT_CREATED: 'CHECKOUT_CREATED',\n  CHECKOUT_CREATE_ERROR: 'CHECKOUT_CREATE_ERROR',\n\n  CHECKOUT_FETCHING: 'CHECKOUT_FETCHING',\n  CHECKOUT_FETCHED: 'CHECKOUT_FETCHED',\n  CHECKOUT_FETCH_ERROR: 'CHECKOUT_FETCH_ERROR',\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default Loading\n","import {actionType} from './actionTypes';\nimport Client from 'shopify-buy';\n\n\n// Initializing a client to return content in the store's primary language\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\n\n/**\n * \n * create checkout & \n * store checkout Id into local storage\n */\nexport const actionCreateCheckout = () => {\n  \n    return function (dispatch) {\n\n      dispatch({type:actionType.CHECKOUT_CREATING})\n\n      // Create an empty checkout\n      client.checkout.create().then((checkout) => {\n          // Do something with the checkout\n          //console.log(\"CHECKOUT ACTION:\",checkout.id);\n          dispatch({\n            type: actionType.CHECKOUT_CREATED,\n            checkoutId: checkout.id,\n            data: checkout\n          })\n          \n          /** store checkout into localstorage */\n          if (!localStorage.checkout) {\n            localStorage.setItem(\"checkout\", checkout.id);\n          }\n        })\n        .catch(error => {\n          dispatch({\n            type: actionType.CHECKOUT_CREATE_ERROR,\n            fetched: false,\n            error: error\n          })\n        })\n    }    \n\n}\n\n\n/**\n * \n * @returns FETCH ALL PRODUCTS\n */\nexport const actionFetchAllProduct = () => {\n\n  return function (dispatch) {\n    \n    dispatch({\n      type: actionType.PRODUCT_START_FETCHING\n    })\n\n    //Fetch all products in your shop\n    client.product.fetchAll()\n    .then((products) => {\n      console.log(products);\n      //Do something with the products\n      dispatch({\n        type: actionType.PRODUCT_FETCHED,\n        data: products\n      })\n    })\n    .catch(err => {\n      dispatch({ \n        type: actionType.PRODUCT_FETCH_ERROR,\n        fetched: false,\n        err:err\n      })\n    })\n  }// action fetchAllProducts closed\n\n\n\n}\n\n/**\n * FETCH SINGLE PRODUCT PRODUCT BY ID\n*/\nexport const actionFetchSingleProduct = (productId) => {\n\n  return function (dispatch) {\n\n  dispatch({\n    type: actionType.A_PRODUCT_START_FETCHING\n  })  \n\n  client.product.fetch(productId).then((product) => {\n   // console.log(product);\n    dispatch({\n      type: actionType.A_PRODUCT_FETCHED,\n      data: product,\n    })\n  }).catch((error) => {\n    dispatch({\n      type: actionType.A_PRODUCT_FETCH_ERROR,\n      fetched: false,\n      error: error\n    })\n  })\n  \n\n  }\n  \n  \n\n}\n\n\n/**\n * ADD TO CART [Adding Line Items]\n */\nexport const actionAddToCart = (checkoutId, variantId, qty) => {\n\n  const lineItemsToAdd = [\n    {\n      variantId: variantId,\n      quantity: qty,\n      customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\n    }\n  ];\n\n  return function(dispatch){\n\n    dispatch({type:actionType.ADDING_TO_CART})\n\n    // Add an item to the checkout\n    client.checkout.addLineItems(checkoutId, lineItemsToAdd).then((checkout) => {\n    // Do something with the updated checkout\n      console.log(checkout.lineItems); // Array with one additional line item\n      dispatch({\n        type: actionType.ADDED_TO_CART,\n        data: checkout.lineItems\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: actionType.ADD_TO_CART_ERROR,\n        fetched: false,\n        error: error,\n      })\n    })\n  }\n\n}\n\n/**\n * FETCH CHECKOUT\n */\nexport const actionFetchCheckout = (checkoutId) => {\n\n  return function(dispatch){\n    dispatch({\n      type: actionType.CHECKOUT_FETCHING\n    })\n\n    client.checkout.fetch(checkoutId).then((checkout) => {\n      \n      console.log(checkout);\n      dispatch({\n        type: actionType.CHECKOUT_FETCHED,\n        data: checkout,\n      })\n\n    })\n    .catch(error => {\n      dispatch({\n        type: actionType.CHECKOUT_FETCH_ERROR,\n        error: error,\n      })\n    })\n  }\n}","import Loading from './Loading';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {actionFetchSingleProduct} from '../redux/action';\nimport {Link} from 'react-router-dom';\n\n\nfunction Items() {\n\n  const dispatch = useDispatch();\n  const products = useSelector(state => state.reducerFetchAllProducts.product_data);\n  const product_fetched = useSelector(state => state.reducerFetchAllProducts.product_fetched)\n\n  console.log(\"productts \",products);\n  \n  const Image = (image) => (<div>\n        <img className=\"w-full\" src={image[0].src} alt=\"product item\" />\n      </div>);\n\n  const Price = (variants) => ( <div>{variants[0].price}</div> );\n\n  const itemDetails = (id) => {\n    dispatch(actionFetchSingleProduct(id));    \n  }\n\n  // const LoadVariants = (data) => {\n  //   return data.map(item => {\n  //     const {available, sku, title, price } = item;\n  //     return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n  //       <p>{title}</p>\n  //       <p> Price: {price}</p>\n  //       <p> SKU: {sku}</p>\n  //     </div>\n  //   })\n  // }\n\n  if(!product_fetched) return <Loading />\n  return (\n    <div className=\"grid lg:grid-cols-3 xl:grid-cols-4 md:m-0 m-2\">\n      {\n        products.map((item)=>{\n          const {id, title, images, variants} = item;\n          return  <Link to={`/item/${id}`}>\n              <div className=\"w-full p-3 md:m-2 cursor-pointer\">\n                <div>{Image(images)}</div>\n                <div className=\"font-light mt-2\">\n                  <h3>{title}</h3>\n                  <div>{Price(variants)}</div>\n                </div>\n              </div>\n          </Link>\n        })\n      }\n    </div>\n  )\n}\n\nexport default Items","import {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Loading from './Loading';\nimport {actionAddToCart, actionFetchSingleProduct} from '../redux/action';\nimport {useParams, Link} from 'react-router-dom';\n\n\n\nfunction Item() {\n\n  const {id} = useParams();\n\n  const dispatch = useDispatch();\n\n  const product = useSelector(state => state.reducerFetchProduct.a_product_data);\n  const product_fetched = useSelector(state => state.reducerFetchProduct.a_product_fetched);\n  const checkoutId = useSelector(state => state.reducerCreateCheckout.checkout_id);\n\n\n  useEffect(()=>{\n      dispatch(actionFetchSingleProduct(id));\n  },[dispatch, id])\n\n\n  const AddToCart = () => {\n\n\n  }\n\n  const LoadImage = (image) => {\n    return image.map((item)=> {\n      return <div>\n        <img className=\"w-full p-2\" src={item.src} alt=\"product item\" />\n        </div>\n    })\n  }\n\n  console.log(product);\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex flex-col p-2 bg-gray-100 m-1\">\n        <div>{title}</div>\n        <div> Price: {price}</div>\n        <div> SKU: {sku}</div>\n      </div>\n    })\n  }\n\n  if(!product_fetched) return <Loading />\n  return (\n    <div className=\"max-w-screen-xl\">\n\n      <div className=\"p-2 m-2 w-20 cursor-pointer\">\n        <div><Link to=\"/\">Close</Link> </div>\n      </div>\n\n    {\n      product &&\n      <div className=\"grid md:grid-cols-12 gap-2 py-4 my-2\">\n        <div className=\"col-span-8\">\n          <div className=\"grid md:grid-cols-2 grid-flow-row gap-2\">\n            {LoadImage(product.images)}\n          </div>\n        </div>\n        \n        <div className=\"col-span-4\">\n            <h1 className=\"text-2xl my-2\">{product.title}</h1>\n            <div>\n              {LoadVariants(product.variants)}\n            </div>\n            <div>\n              <div \n                onClick={() => dispatch(actionAddToCart(checkoutId, product.variants[0].id, 1))}\n                className=\"cursor-pointer p-2 m-2\" >\n                Add to Cart\n              </div>\n            </div>\n        </div>\n      </div>\n    }\n    </div>\n  )\n}\n\nexport default Item;","import React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\n\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\n\n\nclass ShopProvider extends Component {\n\n  state = {\n    products: [],\n    product: {},\n    checkout: {},\n    isCartOpen: false,\n    removedItem: {}\n  };\n\n  componentDidMount() {\n    // this.createCheckout();\n\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.yw_store_checkout) {\n      this.fetchCheckout(localStorage.yw_store_checkout);\n    } else {\n      this.createCheckout();\n    }\n    //if there is no checkout_id in localStorage then we will create a new checkout\n\n    //else fetch the checkout from shopify\n  }\n\n  /**\n   * Store checkout id into localstorage\n   */\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"yw_store_checkout\", checkout.id);\n    await this.setState({ checkout: checkout });\n  };\n\n  /**\n   * \n   * Fetch Checkout \n   */\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  /**\n   * \n   * Add Item to checkout\n   */\n  addItemToCheckout = async (variantId, quantity) => {\n\n    const lineItemsToAdd = [{ variantId, quantity: parseInt(quantity, 10)}];\n    \n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n    \n    this.setState({ checkout: checkout });\n    console.log(checkout);\n\n    this.openCart();\n  };\n\n  /**\n   * Remove Item from checkout\n   */\n  removeItemFromCheckout = async (checkoutId, lineItemIdsRemove) => {\n    \n      const lineItemIdsToRemove = [lineItemIdsRemove];\n\n      // Remove an item from the checkout\n      const checkout = client.checkout.removeLineItems(checkoutId, lineItemIdsToRemove)\n      .then((checkout) => {\n        // Do something with the updated checkout\n        console.log(checkout.lineItems); // Checkout with line item 'Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzc4NTc5ODkzODQ=' removed\n        console.log(checkout.lineItems.type)\n        console.log(\"LENGTH\", checkout.lineItems.length); \n      });\n\n      //this.setState({ checkout: checkout });\n      console.log(checkout);\n      \n  }\n\n\n\n  /**\n   * Fetch All Products\n   */\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  /**\n   * \n   * Fetch single product\n   */\n  fetchProductWithId = async (id) => {\n    const product = await client.product.fetch(id);\n    this.setState({ product: product });\n    //console.log(JSON.stringify(product));\n\n    return product;\n  };\n\n  closeCart = () => {\n    this.setState({ isCartOpen: false });\n  };\n  openCart = () => {\n    this.setState({ isCartOpen: true });\n  };\n\n  \n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithId: this.fetchProductWithId,\n          closeCart: this.closeCart,\n          openCart: this.openCart,\n          addItemToCheckout: this.addItemToCheckout,\n          removeItemFromCheckout: this.removeItemFromCheckout,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;","import {useEffect, useState} from 'react';\nimport Items from './components/Items';\nimport Item from './components/Item';\nimport Cart from './components/Cart';\nimport {actionFetchAllProduct} from './redux/action';\nimport {useDispatch} from 'react-redux';\nimport {actionCreateCheckout} from './redux/action';\n\nfunction Products() {\n\n  const dispatch = useDispatch();\n\n\n  useEffect(()=>{\n    dispatch(actionCreateCheckout());\n    dispatch(actionFetchAllProduct());\n  },[dispatch])\n\n  return (\n    <div>\n      <Items />\n    </div>\n  )\n}\n\nexport default Products","import Item from './components/Item';\n\n\nfunction Product() {\n  return (\n    <div>\n      <Item />\n    </div>\n  )\n}\n\nexport default Product\n","import {useEffect} from 'react';\nimport {BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport Products from './Products';\nimport Product from './Product';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {actionFetchCheckout} from './redux/action';\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const chekcoutId = useSelector( state => state.reducerCreateCheckout.checkout_id );\n\n  useEffect(()=>{\n    chekcoutId && dispatch(actionFetchCheckout(chekcoutId));\n  },[dispatch, chekcoutId])\n\n  return (\n    <div>\n      <BrowserRouter>\n      Shopify shop <Link to=\"/\">Products List</Link>\n        <Switch>\n          <Route exact path=\"/\" >\n          <Products />\n          </Route>\n          <Route path=\"/item/:id\" >\n            <Product />\n          </Route>\n\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","const {actionType} = require('./actionTypes');\n\n\n/**\n * FETCH ALL PRODUCTS\n */\nconst initalStateAllProducts = {\n  product_fetching: false,\n  product_fetched: false,\n  product_fetch_error: '',\n  product_data: [],\n  product_dataLength: 0,\n}\n\nexport const reducerFetchAllProducts = (state = initalStateAllProducts, action) => {\n\n  //console.log(\"REDUCER???\",action.type);\n\n  switch (action.type) {\n    \n    case actionType.PRODUCT_START_FETCHING:\n      return {\n        product_fetching: true,\n        product_data: []\n      }\n    case actionType.PRODUCT_FETCHED:\n      return {\n        product_data: action.data,\n        product_fetched: true,\n      }\n    case actionType.PRODUCT_FETCH_ERROR:\n      return {\n        product_fetched: false,\n        product_fetching: false,\n        product_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n\n}\n\n\n/** \n * FETCH SINGLE PRODUCT BY ID\n */\nconst initalStateProduct = {\n  a_product_fetching: false,\n  a_product_fetched: false,\n  a_product_fetch_error: '',\n  a_product_data: [],\n  a_product_dataLength: 0,\n}\n\nexport const reducerFetchProduct = (state = initalStateProduct, action) => {\n\n  switch (action.type) {\n    \n    case actionType.A_PRODUCT_START_FETCHING:\n      return {\n        a_product_fetching: true,\n        a_product_data: []\n      }\n    case actionType.A_PRODUCT_FETCHED:\n      return {\n        a_product_data: action.data,\n        a_product_fetched: true,\n      }\n    case actionType.A_PRODUCT_FETCH_ERROR:\n      return {\n        a_product_fetched: false,\n        a_product_fetching: false,\n        a_product_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}\n\n\n/** \n * CREATE CHECKOUT ID\n*/\nconst initalStateCheckout = {\n  checkout_creating: false,\n  checkout_created: false,\n  checkout_error: '',\n  checkout_id: '',\n  data: '',\n}\n\nexport const reducerCreateCheckout = (state = initalStateCheckout, action) => {\n\n  switch (action.type) {\n    \n    case actionType.CHECKOUT_CREATING:\n      return {\n        checkout_fetching: true,\n        checkout_id: ''\n      }\n    case actionType.CHECKOUT_CREATED:\n      return {\n        checkout_id: action.checkoutId,\n        data: action.data,\n        checkout_created: true,\n      }\n    case actionType.CHECKOUT_CREATE_ERROR:\n      return {\n        checkout_created: false,\n        checkout_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}\n\n\n\n/** \n * ADD TO CART [Adding Line Items]\n */\n const initalStateAddToCart = {\n  adding_to_cart: false,\n  added_to_cart: false,\n  add_to_cart_error: '',\n  cart_items: [],\n}\n\nexport const reducerAddToCart = (state = initalStateAddToCart, action) => {\n\n  switch (action.type) {\n    \n    case actionType.ADDING_TO_CART:\n      return {\n        adding_to_cart: true,\n        cart_items: []\n      }\n    case actionType.ADDED_TO_CART:\n      return {\n        cart_items: action.data,\n        added_to_cart: true,\n      }\n    case actionType.ADD_TO_CART_ERROR:\n      return {\n        added_to_cart: false,\n        add_to_cart_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}\n\n\n\n/** \n * FETCH CHECKOUT\n */\n const initalStateFetchCheckout = {\n  checkout_fetching: false,\n  checkout_fetched: false,\n  checkout_fetch_error: '',\n  checkout_data: '',\n}\n\nexport const reducerFetchCheckout = (state = initalStateFetchCheckout, action) => {\n\n  switch (action.type) {\n    \n    case actionType.CHECKOUT_FETCHING:\n      return {\n        checkout_fetching: true,\n        checkout_data: []\n      }\n    case actionType.CHECKOUT_FETCHED:\n      return {\n        checkout_data: action.data,\n        checkout_fetched: true,\n      }\n    case actionType.CHECKOUT_FETCH_ERROR:\n      return {\n        checkout_fetched: false,\n        checkout_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n\n  reducerFetchAllProducts,\n  reducerFetchProduct,\n  reducerCreateCheckout,\n  reducerAddToCart,\n  reducerFetchCheckout,\n  \n  \n} from './reducer';\n\nconst reducer = combineReducers({\n\n    reducerFetchAllProducts,\n    reducerFetchProduct,\n    reducerCreateCheckout,\n    reducerAddToCart,\n    reducerFetchCheckout,\n    \n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);","import React from 'react';\nimport ReactDom from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\n\n\nReactDom.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  </React.StrictMode>\n, document.getElementById(\"root\"));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/** \n * StrictMode is a tool for highlighting potential problems in an application. Like Fragment, StrictMode does not render any visible UI. It activates additional checks and warnings for its descendants.\n\nNote:\n\nStrict mode checks are run in development mode only; they do not impact the production build.\n\n*/"],"sourceRoot":""}