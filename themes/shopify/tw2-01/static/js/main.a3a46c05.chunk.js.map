{"version":3,"sources":["context/shopContext.js","components/Loading.js","components/Items.js","Products.js","App.js","index.js"],"names":["ShopContext","React","createContext","client","Client","buildClient","storefrontAccessToken","domain","Component","Consumer","Loading","Items","setProductId","useContext","fetchAllProducts","products","useEffect","map","item","data","image","id","title","descriptionHtml","images","variants","onClick","className","src","alt","available","sku","price","Products","useState","productId","console","log","App","ReactDom","render","document","getElementById"],"mappings":"8SAGMA,EAAcC,IAAMC,gBAEpBC,EAASC,IAAOC,YAAY,CAChCC,sBAAuB,mCACvBC,OAAQ,6BAGiBC,YA4FNR,EAAYS,SC5FlBC,MARf,WACE,OACE,8CCqDWC,MApDf,YAAgC,IAAhBC,EAAe,EAAfA,aAEd,EAAqCC,qBAAWb,GAAzCc,EAAP,EAAOA,iBAAkBC,EAAzB,EAAyBA,SA6BzB,OA1BAC,qBAAU,WAEN,OADAF,IACO,eAGT,CAACA,IAqBCC,EAEF,8BAEIA,EAASE,KAAI,SAACC,GACZ,IAhBcC,EANHC,EAsBJC,EAA+CH,EAA/CG,GAAGC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,gBAAiBC,EAAoBN,EAApBM,OAAQC,EAAYP,EAAZO,SAC1C,OAAO,sBACPC,QAAS,kBAAMd,EAAaS,IAC5BM,UAAU,iCAFH,UAGL,6BAAKL,IACL,8BAAMC,IACN,+BA5BSH,EA4BOI,EA3BjBJ,EAAMH,KAAI,SAACC,GAChB,OAAO,8BAAK,qBAAKS,UAAU,WAAWC,IAAKV,EAAKU,IAAKC,IAAI,yBA2BnD,+BAvBYV,EAuBOM,EAtBpBN,EAAKF,KAAI,SAAAC,GACd,IAAOY,EAAiCZ,EAAjCY,UAAWC,EAAsBb,EAAtBa,IAAKT,EAAiBJ,EAAjBI,MAAOU,EAAUd,EAAVc,MAC9B,OAAOF,GAAa,sBAAKH,UAAU,2BAAf,UAClB,4BAAIL,IACJ,yCAAYU,KACZ,uCAAUD,sBAKK,cAAC,EAAD,KClBRE,MAff,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBvB,EAAlB,KAIA,OAFAwB,QAAQC,IAAIF,GAGV,8BAEE,cAAC,EAAD,CAAOvB,aAAcA,OCOZ0B,MAdf,WAEE,OACE,+CAEE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,YCNVC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.a3a46c05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\nclass ShopProvider extends Component {\n  state = {\n    products: [],\n    product: {},\n    checkout: {},\n    isCartOpen: false,\n  };\n\n  componentDidMount() {\n    // this.createCheckout();\n\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    }\n    //if there is no checkout_id in localStorage then we will create a new checkout\n\n    //else fetch the checkout from shopify\n  }\n\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"checkout\", checkout.id);\n    await this.setState({ checkout: checkout });\n  };\n\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  addItemToCheckout = async (variantId, quantity) => {\n    const lineItemsToAdd = [\n      {\n        variantId,\n        quantity: parseInt(quantity, 10),\n      },\n    ];\n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n    this.setState({ checkout: checkout });\n    console.log(checkout);\n\n    this.openCart();\n  };\n\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  fetchProductWithId = async (id) => {\n    const product = await client.product.fetch(id);\n    this.setState({ product: product });\n    console.log(JSON.stringify(product));\n\n    return product;\n  };\n\n  closeCart = () => {\n    this.setState({ isCartOpen: false });\n  };\n  openCart = () => {\n    this.setState({ isCartOpen: true });\n  };\n\n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithId: this.fetchProductWithId,\n          closeCart: this.closeCart,\n          openCart: this.openCart,\n          addItemToCheckout: this.addItemToCheckout,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default Loading\n","import {useContext, useEffect} from 'react'\nimport {ShopContext} from '../context/shopContext';\nimport Loading from './Loading';\n\n\nfunction Items({setProductId}) {\n\n  const {fetchAllProducts, products} = useContext(ShopContext)\n\n\n  useEffect(()=>{\n      fetchAllProducts();\n      return () => {\n        //clean up\n      };\n  },[fetchAllProducts])\n\n\n\n  const LoadImage = (image) => {\n    return image.map((item)=>{\n      return <div><img className=\"w-48 p-1\" src={item.src} alt=\"product item\" /></div>\n    })\n  }\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n        <p>{title}</p>\n        <p> Price: {price}</p>\n        <p> SKU: {sku}</p>\n      </div>\n    })\n  }\n\n  if(!products) return <Loading />\n  return (\n    <div>\n      {\n        products.map((item)=>{\n          const {id,title, descriptionHtml, images, variants} = item;\n          return <div \n          onClick={() => setProductId(id)}\n          className=\"border border-gray-300 p-3 m-3\">\n            <h3>{title}</h3>\n            <div>{descriptionHtml}</div>\n            <div>{LoadImage(images)}</div>\n            <div>{LoadVariants(variants)}</div>\n          </div>\n        })\n      }\n      \n    </div>\n  )\n}\n\nexport default Items\n","import {useState} from 'react';\nimport Items from './components/Items';\n\nfunction Products() {\n\n  const [productId, setProductId] = useState('');\n\n  console.log(productId);\n\n  return (\n    <div>\n\n      <Items setProductId={setProductId} />\n      \n    </div>\n  )\n}\n\nexport default Products\n","import {BrowserRouter, Switch } from 'react-router-dom';\nimport Products from './Products';\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      shopify shop\n      <BrowserRouter>\n        <Switch>\n          <Products />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\nReactDom.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}