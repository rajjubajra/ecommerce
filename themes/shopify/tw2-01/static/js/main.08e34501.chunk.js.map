{"version":3,"sources":["reportWebVitals.js","components/Loading.js","redux/action.js","components/Items.js","components/Item.js","context/shopContext.js","Products.js","App.js","redux/reducer.js","redux/store.js","index.js","redux/actionTypes.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","client","Client","buildClient","storefrontAccessToken","domain","Items","dispatch","useDispatch","products","useSelector","state","reducerFetchAllProducts","product_data","product_fetched","console","log","map","item","data","image","id","title","descriptionHtml","images","variants","onClick","productId","type","actionType","A_PRODUCT_START_FETCHING","product","fetch","A_PRODUCT_FETCHED","catch","error","A_PRODUCT_FETCH_ERROR","fetched","className","src","alt","available","sku","price","Item","reducerFetchProduct","a_product_data","a_product_fetched","ShopContext","React","createContext","Component","Consumer","Products","useEffect","PRODUCT_START_FETCHING","fetchAll","PRODUCT_FETCHED","err","PRODUCT_FETCH_ERROR","App","require","initalStateAllProducts","product_fetching","product_fetch_error","product_dataLength","initalStateProduct","a_product_fetching","a_product_fetch_error","a_product_dataLength","reducer","combineReducers","action","middleware","applyMiddleware","thunk","createLogger","store","createStore","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08e34501.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nfunction Loading() {\n  return (\n    <div>\n      Loading...\n    </div>\n  )\n}\n\nexport default Loading\n","import {actionType} from './actionTypes';\nimport Client from 'shopify-buy';\n\n\n\n// Initializing a client to return content in the store's primary language\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\n\n/**\n * \n * @returns FETCH ALL PRODUCTS\n */\nexport const actionFetchAllProduct = () => {\n\n  return function (dispatch) {\n    \n    dispatch({\n      type: actionType.PRODUCT_START_FETCHING\n    })\n\n    //Fetch all products in your shop\n    client.product.fetchAll()\n    .then((products) => {\n      console.log(products);\n      //Do something with the products\n      dispatch({\n        type: actionType.PRODUCT_FETCHED,\n        data: products\n      })\n    })\n    .catch(err => {\n      dispatch({ \n        type: actionType.PRODUCT_FETCH_ERROR,\n        fetched: false,\n        err:err\n      })\n    })\n  }// action fetchAllProducts closed\n\n\n\n}\n\n/**\n * FETCH SINGLE PRODUCT PRODUCT BY ID\n*/\nexport const actionFetchSingleProduct = (productId) => {\n\n  return function (dispatch) {\n\n  dispatch({\n    type: actionType.A_PRODUCT_START_FETCHING\n  })  \n\n  client.product.fetch(productId).then((product) => {\n    console.log(product);\n    dispatch({\n      type: actionType.A_PRODUCT_FETCHED,\n      data: product,\n    })\n  }).catch((error) => {\n    dispatch({\n      type: actionType.A_PRODUCT_FETCH_ERROR,\n      fetched: false,\n      error: error\n    })\n  })\n  \n\n  }\n  \n  \n\n}","import Loading from './Loading';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {actionFetchSingleProduct} from '../redux/action';\n\n\nfunction Items() {\n\n  const dispatch = useDispatch();\n\n  const products = useSelector(state => state.reducerFetchAllProducts.product_data);\n  const product_fetched = useSelector(state => state.reducerFetchAllProducts.product_fetched)\n\n\n  console.log(\"productts \",products);\n  \n  const LoadImage = (image) => {\n    return image.map((item)=>{\n      return <div>\n        <img className=\"w-48 p-1\" src={item.src} alt=\"product item\" />\n      </div>\n    })\n  }\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex p-2 bg-gray-100 m-1\">\n        <p>{title}</p>\n        <p> Price: {price}</p>\n        <p> SKU: {sku}</p>\n      </div>\n    })\n  }\n\n  if(!product_fetched) return <Loading />\n  return (\n    <div>\n      {\n        products.map((item)=>{\n          const {id,title, descriptionHtml, images, variants} = item;\n          return <div \n          onClick={() => dispatch(actionFetchSingleProduct(id))}\n          className=\"border border-gray-300 p-3 m-3\">\n            <h3>{title}</h3>\n            <div>{descriptionHtml}</div>\n            <div>{LoadImage(images)}</div>\n            <div>{LoadVariants(variants)}</div>\n          </div>\n        })\n      }\n      \n    </div>\n  )\n}\n\nexport default Items","import {useSelector} from 'react-redux';\nimport Loading from './Loading';\n\n\nfunction Item() {\n\n  const product = useSelector(state => state.reducerFetchProduct.a_product_data);\n  const product_fetched = useSelector(state => state.reducerFetchProduct.a_product_fetched);\n\n  const LoadImage = (image) => {\n    return image.map((item)=> {\n      return <div>\n        <img className=\"md:w-1/2 w-full p-1\" src={item.src} alt=\"product item\" />\n        </div>\n    })\n  }\n\n  const LoadVariants = (data) => {\n    return data.map(item => {\n      const {available, sku, title, price } = item;\n      return available && <div className=\"flex flex-col p-2 bg-gray-100 m-1\">\n        <div>{title}</div>\n        <div> Price: {price}</div>\n        <div> SKU: {sku}</div>\n      </div>\n    })\n  }\n\n  if(product_fetched) return <Loading />\n  return (\n    <div className=\"w-1/2 m-auto flex flex-col justify-center\">\n    <div className=\"p-2 m-2 w-20 cursor-pointer\">\n      <div> Close </div>\n    </div>\n\n    {\n      product &&\n      <div className=\"flex flex-col py-4 my-2 border border-gray-200\">\n\n      <h1 className=\"text-2xl\">{product.title}</h1>\n      <div>\n        {LoadImage(product.images)}\n      </div>\n      <div>\n        {LoadVariants(product.variants)}\n      </div>\n      <div>\n        <div className=\"cursor-pointer p-2 m-2\" >\n        Add to Cart</div>\n      </div>\n      \n      </div>\n    }\n    </div>\n  )\n}\n\nexport default Item;","import React, { Component } from \"react\";\nimport Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\n\nconst client = Client.buildClient({\n  storefrontAccessToken: 'cc92551596409162e6f510c8efd7f0b0',\n  domain: 'yw-t-shirt.myshopify.com',\n});\n\n\n\nclass ShopProvider extends Component {\n\n  state = {\n    products: [],\n    product: {},\n    checkout: {},\n    isCartOpen: false,\n    removedItem: {}\n  };\n\n  componentDidMount() {\n    // this.createCheckout();\n\n    //Check if localStorage has a checkout_id saved\n    if (localStorage.yw_store_checkout) {\n      this.fetchCheckout(localStorage.yw_store_checkout);\n    } else {\n      this.createCheckout();\n    }\n    //if there is no checkout_id in localStorage then we will create a new checkout\n\n    //else fetch the checkout from shopify\n  }\n\n  /**\n   * Store checkout id into localstorage\n   */\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"yw_store_checkout\", checkout.id);\n    await this.setState({ checkout: checkout });\n  };\n\n  /**\n   * \n   * Fetch Checkout \n   */\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  /**\n   * \n   * Add Item to checkout\n   */\n  addItemToCheckout = async (variantId, quantity) => {\n\n    const lineItemsToAdd = [{ variantId, quantity: parseInt(quantity, 10)}];\n    \n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n    \n    this.setState({ checkout: checkout });\n    console.log(checkout);\n\n    this.openCart();\n  };\n\n  /**\n   * Remove Item from checkout\n   */\n  removeItemFromCheckout = async (checkoutId, lineItemIdsRemove) => {\n    \n      const lineItemIdsToRemove = [lineItemIdsRemove];\n\n      // Remove an item from the checkout\n      const checkout = client.checkout.removeLineItems(checkoutId, lineItemIdsToRemove)\n      .then((checkout) => {\n        // Do something with the updated checkout\n        console.log(checkout.lineItems); // Checkout with line item 'Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzc4NTc5ODkzODQ=' removed\n        console.log(checkout.lineItems.type)\n        console.log(\"LENGTH\", checkout.lineItems.length); \n      });\n\n      //this.setState({ checkout: checkout });\n      console.log(checkout);\n      \n  }\n\n\n\n  /**\n   * Fetch All Products\n   */\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  /**\n   * \n   * Fetch single product\n   */\n  fetchProductWithId = async (id) => {\n    const product = await client.product.fetch(id);\n    this.setState({ product: product });\n    //console.log(JSON.stringify(product));\n\n    return product;\n  };\n\n  closeCart = () => {\n    this.setState({ isCartOpen: false });\n  };\n  openCart = () => {\n    this.setState({ isCartOpen: true });\n  };\n\n  \n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductWithId: this.fetchProductWithId,\n          closeCart: this.closeCart,\n          openCart: this.openCart,\n          addItemToCheckout: this.addItemToCheckout,\n          removeItemFromCheckout: this.removeItemFromCheckout,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;","import {useEffect, useState} from 'react';\nimport Items from './components/Items';\nimport Item from './components/Item';\nimport Cart from './components/Cart';\nimport {actionFetchAllProduct} from './redux/action';\nimport {useDispatch} from 'react-redux';\n\nfunction Products() {\n\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(actionFetchAllProduct());\n  },[dispatch])\n\n  return (\n    <div>\n      <h1>Shopify : REDUX </h1>\n      <div>\n        <Items />\n      </div>\n      <div>\n        <Item />\n      </div>\n      \n\n    </div>\n  )\n}\n\nexport default Products","import {BrowserRouter, Switch } from 'react-router-dom';\nimport Products from './Products';\n\n\n\nfunction App() {\n\n  return (\n    <div>\n      shopify shop\n      <BrowserRouter>\n        <Switch>\n          <Products />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","const {actionType} = require('./actionTypes');\n\n\n/**\n * FETCH ALL PRODUCTS\n */\nconst initalStateAllProducts = {\n  product_fetching: false,\n  product_fetched: false,\n  product_fetch_error: '',\n  product_data: [],\n  product_dataLength: 0,\n}\n\nexport const reducerFetchAllProducts = (state = initalStateAllProducts, action) => {\n\n  //console.log(\"REDUCER???\",action.type);\n\n  switch (action.type) {\n    \n    case actionType.PRODUCT_START_FETCHING:\n      return {\n        product_fetching: true,\n        product_data: []\n      }\n    case actionType.PRODUCT_FETCHED:\n      return {\n        product_data: action.data,\n        product_fetched: true,\n      }\n    case actionType.PRODUCT_FETCH_ERROR:\n      return {\n        product_fetched: false,\n        product_fetching: false,\n        product_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n\n}\n\n\n/** \n * FETCH SINGLE PRODUCT BY ID\n */\nconst initalStateProduct = {\n  a_product_fetching: false,\n  a_product_fetched: false,\n  a_product_fetch_error: '',\n  a_product_data: [],\n  a_product_dataLength: 0,\n}\n\nexport const reducerFetchProduct = (state = initalStateProduct, action) => {\n\n  switch (action.type) {\n    \n    case actionType.A_PRODUCT_START_FETCHING:\n      return {\n        a_product_fetching: true,\n        a_product_data: []\n      }\n    case actionType.A_PRODUCT_FETCHED:\n      return {\n        a_product_data: action.data,\n        a_product_fetched: true,\n      }\n    case actionType.A_PRODUCT_FETCH_ERROR:\n      return {\n        a_product_fetched: false,\n        a_product_fetching: false,\n        a_product_fetch_error: action.error\n      }\n    /** default state */\n    default:\n      return state;\n    }\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n\n  reducerFetchAllProducts,\n  reducerFetchProduct,\n  \n} from './reducer';\n\nconst reducer = combineReducers({\n\n    reducerFetchAllProducts,\n    reducerFetchProduct,\n\n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);","import React from 'react';\nimport ReactDom from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\n\n\nReactDom.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  </React.StrictMode>\n, document.getElementById(\"root\"));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n/** \n * StrictMode is a tool for highlighting potential problems in an application. Like Fragment, StrictMode does not render any visible UI. It activates additional checks and warnings for its descendants.\n\nNote:\n\nStrict mode checks are run in development mode only; they do not impact the production build.\n\n*/","export const actionType = {\n\n  PRODUCT_START_FETCHING: 'PRODUCT_START_FETCHING',\n  PRODUCT_FETCHED: 'PRODUCT_FETCHED',\n  PRODUCT_FETCH_ERROR: 'PRODUCT_FETCH_ERROR',\n\n  A_PRODUCT_START_FETCHING: 'A_PRODUCT_START_FETCHING',\n  A_PRODUCT_FETCHED: 'A_PRODUCT_FETCHED',\n  A_PRODUCT_FETCH_ERROR: 'A_PRODUCT_FETCH_ERROR'\n\n\n}"],"sourceRoot":""}